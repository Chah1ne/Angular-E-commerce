import { ElementRef, SimpleChanges, EventEmitter, NgZone, AfterViewInit, OnChanges, OnDestroy } from "@angular/core";
import { FilePondOptions } from "filepond";
import * as i0 from "@angular/core";
export declare class FilePondComponent implements AfterViewInit, OnChanges, OnDestroy {
    options: FilePondOptions | any;
    files: FilePondOptions["files"];
    oninit: EventEmitter<any>;
    onwarning: EventEmitter<any>;
    onerror: EventEmitter<any>;
    onactivatefile: EventEmitter<any>;
    onaddfilestart: EventEmitter<any>;
    onaddfileprogress: EventEmitter<any>;
    onaddfile: EventEmitter<any>;
    onprocessfilestart: EventEmitter<any>;
    onprocessfileprogress: EventEmitter<any>;
    onprocessfileabort: EventEmitter<any>;
    onprocessfilerevert: EventEmitter<any>;
    onprocessfile: EventEmitter<any>;
    onprocessfiles: EventEmitter<any>;
    onremovefile: EventEmitter<any>;
    onpreparefile: EventEmitter<any>;
    onupdatefiles: EventEmitter<any>;
    private root;
    private zone;
    private pond;
    private handleEvent;
    constructor(root: ElementRef, zone: NgZone);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<FilePondComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FilePondComponent, "file-pond", never, { "options": "options"; "files": "files"; }, { "oninit": "oninit"; "onwarning": "onwarning"; "onerror": "onerror"; "onactivatefile": "onactivatefile"; "onaddfilestart": "onaddfilestart"; "onaddfileprogress": "onaddfileprogress"; "onaddfile": "onaddfile"; "onprocessfilestart": "onprocessfilestart"; "onprocessfileprogress": "onprocessfileprogress"; "onprocessfileabort": "onprocessfileabort"; "onprocessfilerevert": "onprocessfilerevert"; "onprocessfile": "onprocessfile"; "onprocessfiles": "onprocessfiles"; "onremovefile": "onremovefile"; "onpreparefile": "onpreparefile"; "onupdatefiles": "onupdatefiles"; }, never, never, false, never>;
}
